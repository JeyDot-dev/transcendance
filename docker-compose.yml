name:     transcendance

services:
  
  # elastic-search:
  #   container_name:   "elasticsearch"
  #   image:            elasticsearch:8.14.1
  #   environment:
  #     - discovery.type=single-node
  #   volumes:
  #     - elastic_data:/usr/share/elasticsearch/data
  #   ports:
  #     - 9200:9200
  #   networks:
  #     - elastic_network
  #   restart:        always
  # nginx:
  #   container_name: nginx
  #   images:         nginx:1.27.0
  #   restart:        always
  #
  #   healthcheck:
  #     test:         ["CMD", "curl", "-f", "http://localhost"]
  #     interval:     1m30s
  #     timeout:      10s
  #     retries:      3
    
  db:
    container_name: postgres
    image:          postgres:16.3-bookworm
    restart:        always

    volumes:
        - postgres_data:/var/lib/postgresql/data

    environment: #To change to secrets
                    POSTGRES_DB: ${DB_NAME}
                    POSTGRES_USER: ${DB_USER} 
                    POSTGRES_PASSWORD: ${DB_PASSWORD}
    networks:
        - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U${DB_USER} -d${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  django:
    container_name: django
    build:          django
    restart:        always

    depends_on:
      db:
        condition: service_healthy

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 1m30s
      timeout: 10s
      retries: 3
    volumes:
      - ./django/project:/project
    ports:
      - "80:8000"
    environment:
      DEBUG:        'true'
      DB_NAME:      ${DB_NAME}
      DB_USER:      ${DB_USER}
      DB_PASSWORD:  ${DB_PASSWORD}
      DB_HOST:      db
      DB_PORT:      ${DB_PORT}

    networks:
        - backend



volumes:
  postgres_data:
  # elastic_data:


networks:
  backend:
  # elastic_network:
